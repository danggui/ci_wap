
@mixin text-overflow($width:100%,$display:block) {
    width: $width;
    display: $display;
    white-space: nowrap;
    -ms-text-overflow: ellipsis;
    text-overflow: ellipsis;
    overflow: hidden;
  
}

@mixin clearfix {
    &:after {
      clear: both;
      content: '.';
      display: block;
      height: 0;
      line-height: 0;
      overflow: hidden;
    }
    *height: 1%;
}

@mixin shadow($x, $y, $blur, $color) {
     -webkit-box-shadow: $x $y $blur $color;
     -moz-box-shadow: $x $y $blur $color;
     box-shadow: $x $y $blur $color;
    }

@mixin  bg-image($url){ // 创建bg-image($url)函数
  background-image: url($url + "@2x.png");
    @media(-webkit-min-device-pixel-ratio: 3),(min-device-pixel-ratio: 3){
      background-image: url($url + "@3x.png")
    }

}
@mixin themify($themes: $themes) {
    @each $theme-name, $map in $themes {
  
      .theme-#{$theme-name} & {
        $theme-map: () !global;
        @each $key, $value in $map {
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
  
        @content;
  
        $theme-map: null !global;
      }
    }
  }
  
  @function themed($key) {
    @return map-get($theme-map, $key);
  }
  
